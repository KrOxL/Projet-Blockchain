{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain\\\\GoerliTry\\\\blockchain-developer-bootcamp-final-project\\\\frontend\\\\src\\\\components\\\\Withdraw.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useEtherBalance } from \"@usedapp/core\";\nimport { BoxItem } from \"./BoxItem\";\nimport { useCustomContractFunction } from \"../hooks/useContractHooks\";\nimport { formatEtherToFixed } from \"../utils\";\nimport { Toast } from \"./Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  marginRight: \"5px\"\n};\nexport const Withdraw = () => {\n  _s();\n\n  const [amount, setAmount] = useState(\"\");\n  const [tx, clearTx, withdraw] = useCustomContractFunction(\"withdraw\");\n  const balance = useEtherBalance(process.env.REACT_APP_CONTRACT_ADDRESS);\n\n  const handleWithdraw = async () => {\n    if (!amount) return;\n    clearTx();\n    await withdraw(parseEther(amount));\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoxItem, {\n    label: \"Withdraw ETH\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      style: style,\n      label: \"Amount (in ETH)\",\n      variant: \"outlined\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      helperText: balance && `Balance in contract: ${formatEtherToFixed(balance, 18)} ETH`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        maxHeight: \"56px\"\n      },\n      variant: \"contained\",\n      color: \"error\",\n      onClick: handleWithdraw,\n      children: \"Withdraw ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      tx: tx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Withdraw, \"oe0QRfSjOasKWwZGRZP1NlNRQZg=\", false, function () {\n  return [useCustomContractFunction, useEtherBalance];\n});\n\n_c = Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["D:/Blockchain/GoerliTry/blockchain-developer-bootcamp-final-project/frontend/src/components/Withdraw.tsx"],"names":["useState","Button","TextField","parseEther","useEtherBalance","BoxItem","useCustomContractFunction","formatEtherToFixed","Toast","style","marginRight","Withdraw","amount","setAmount","tx","clearTx","withdraw","balance","process","env","REACT_APP_CONTRACT_ADDRESS","handleWithdraw","e","target","value","maxHeight"],"mappings":";;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,MAAMC,KAAK,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAd;AAEA,OAAO,MAAMC,QAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAS,EAAT,CAApC;AACA,QAAM,CAACc,EAAD,EAAKC,OAAL,EAAcC,QAAd,IAA0BV,yBAAyB,CAAC,UAAD,CAAzD;AACA,QAAMW,OAAO,GAAGb,eAAe,CAACc,OAAO,CAACC,GAAR,CAAYC,0BAAb,CAA/B;;AAEA,QAAMC,cAAc,GAAG,YAAY;AACjC,QAAI,CAACT,MAAL,EAAa;AAEbG,IAAAA,OAAO;AACP,UAAMC,QAAQ,CAACb,UAAU,CAACS,MAAD,CAAX,CAAd;AACD,GALD;;AAOA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,cAAf;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,KAAK,EAAC,iBAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAEG,MAJT;AAKE,MAAA,QAAQ,EAAGU,CAAD,IAAOT,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAME,MAAA,UAAU,EAAEP,OAAO,IAAK,wBAAuBV,kBAAkB,CAACU,OAAD,EAAU,EAAV,CAAc;AANjF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAsC,MAAA,OAAO,EAAC,WAA9C;AAA0D,MAAA,KAAK,EAAC,OAAhE;AAAwE,MAAA,OAAO,EAAEJ,cAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAYE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAEP;AAAX;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5BM;;GAAMH,Q;UAEqBL,yB,EAChBF,e;;;KAHLO,Q","sourcesContent":["import { FC, useState } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { useEtherBalance } from \"@usedapp/core\";\r\n\r\nimport { BoxItem } from \"./BoxItem\";\r\nimport { useCustomContractFunction } from \"../hooks/useContractHooks\";\r\nimport { formatEtherToFixed } from \"../utils\";\r\nimport { Toast } from \"./Toast\";\r\n\r\nconst style = { marginRight: \"5px\" };\r\n\r\nexport const Withdraw: FC = () => {\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  const [tx, clearTx, withdraw] = useCustomContractFunction(\"withdraw\");\r\n  const balance = useEtherBalance(process.env.REACT_APP_CONTRACT_ADDRESS);\r\n\r\n  const handleWithdraw = async () => {\r\n    if (!amount) return;\r\n\r\n    clearTx();\r\n    await withdraw(parseEther(amount));\r\n  };\r\n\r\n  return (\r\n    <BoxItem label=\"Withdraw ETH\">\r\n      <TextField\r\n        style={style}\r\n        label=\"Amount (in ETH)\"\r\n        variant=\"outlined\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        helperText={balance && `Balance in contract: ${formatEtherToFixed(balance, 18)} ETH`}\r\n      />\r\n      <Button style={{ maxHeight: \"56px\" }} variant=\"contained\" color=\"error\" onClick={handleWithdraw}>\r\n        Withdraw ETH\r\n      </Button>\r\n      <Toast tx={tx} />\r\n    </BoxItem>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}