{"ast":null,"code":"import { formatEther } from \"@ethersproject/units\";\nexport const formatEtherToFixed = function (ethBalance) {\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  return parseFloat(formatEther(ethBalance)).toFixed(precision);\n};","map":{"version":3,"sources":["D:/Blockchain/GoerliTry/blockchain-developer-bootcamp-final-project/frontend/src/utils.ts"],"names":["formatEther","formatEtherToFixed","ethBalance","precision","parseFloat","toFixed"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AAGA,OAAO,MAAMC,kBAAkB,GAAG,UAACC,UAAD;AAAA,MAAwBC,SAAxB,uEAA4C,CAA5C;AAAA,SAChCC,UAAU,CAACJ,WAAW,CAACE,UAAD,CAAZ,CAAV,CAAoCG,OAApC,CAA4CF,SAA5C,CADgC;AAAA,CAA3B","sourcesContent":["import { formatEther } from \"@ethersproject/units\";\r\nimport { BigNumber } from \"@ethersproject/bignumber\";\r\n\r\nexport const formatEtherToFixed = (ethBalance: BigNumber, precision: number = 6) =>\r\n  parseFloat(formatEther(ethBalance)).toFixed(precision);\r\n"]},"metadata":{},"sourceType":"module"}