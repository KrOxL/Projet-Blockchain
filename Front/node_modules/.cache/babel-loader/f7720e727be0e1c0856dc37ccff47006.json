{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain\\\\GoerliTry\\\\blockchain-developer-bootcamp-final-project\\\\frontend\\\\src\\\\components\\\\Toast.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Alert, Snackbar } from \"@mui/material\";\nimport { getExplorerTransactionLink } from \"@usedapp/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst txStatusToToSeverity = (isMining, isSuccess) => {\n  if (isMining) return \"info\";else if (isSuccess) return \"success\";else return \"error\";\n};\n\nexport const Toast = _ref => {\n  _s();\n\n  let {\n    tx\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const isNotNone = tx.status !== \"None\";\n  const isMining = tx.status === \"Mining\";\n  const isSuccess = tx.status === \"Success\";\n  useEffect(() => {\n    if (tx.status !== \"None\") {\n      setOpen(true);\n    }\n  }, [tx.status]);\n\n  const handleClose = (_, reason) => {\n    if (reason === \"clickaway\") return;\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isNotNone && /*#__PURE__*/_jsxDEV(Snackbar, {\n      autoHideDuration: isMining ? null : 8000,\n      open: open,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"filled\",\n        onClose: handleClose,\n        severity: txStatusToToSeverity(isMining, isSuccess),\n        children: [isMining && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sending transaction...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Transaction confirmed...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this), tx.transaction && tx.chainId && /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: getExplorerTransactionLink(tx.transaction.hash, tx.chainId),\n          rel: \"noreferrer\",\n          children: \"View Transaction in Explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), tx.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Toast, \"e27cRtNMdAs0U0o1oHlS6A8OEBo=\");\n\n_c = Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["D:/Blockchain/GoerliTry/blockchain-developer-bootcamp-final-project/frontend/src/components/Toast.tsx"],"names":["useEffect","useState","Alert","Snackbar","getExplorerTransactionLink","txStatusToToSeverity","isMining","isSuccess","Toast","tx","open","setOpen","isNotNone","status","handleClose","_","reason","vertical","horizontal","transaction","chainId","hash","errorMessage"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,EAA4BC,QAA5B,QAAiE,eAAjE;AACA,SAA4BC,0BAA5B,QAA8D,eAA9D;;;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAoBC,SAApB,KAAuD;AAClF,MAAID,QAAJ,EAAc,OAAO,MAAP,CAAd,KACK,IAAIC,SAAJ,EAAe,OAAO,SAAP,CAAf,KACA,OAAO,OAAP;AACN,CAJD;;AAMA,OAAO,MAAMC,KAAoC,GAAG,QAAY;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMW,SAAS,GAAGH,EAAE,CAACI,MAAH,KAAc,MAAhC;AACA,QAAMP,QAAQ,GAAGG,EAAE,CAACI,MAAH,KAAc,QAA/B;AACA,QAAMN,SAAS,GAAGE,EAAE,CAACI,MAAH,KAAc,SAAhC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,EAAE,CAACI,MAAH,KAAc,MAAlB,EAA0B;AACxBF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACF,EAAE,CAACI,MAAJ,CAJM,CAAT;;AAMA,QAAMC,WAAW,GAAG,CAACC,CAAD,EAASC,MAAT,KAA0C;AAC5D,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAE5BL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,cACGC,SAAS,iBACR,QAAC,QAAD;AACE,MAAA,gBAAgB,EAAEN,QAAQ,GAAG,IAAH,GAAU,IADtC;AAEE,MAAA,IAAI,EAAEI,IAFR;AAGE,MAAA,YAAY,EAAE;AAAEO,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OAHhB;AAIE,MAAA,OAAO,EAAEJ,WAJX;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAEA,WAAjC;AAA8C,QAAA,QAAQ,EAAET,oBAAoB,CAACC,QAAD,EAAWC,SAAX,CAA5E;AAAA,mBACGD,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADf,EAEGC,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFhB,EAGGE,EAAE,CAACU,WAAH,IAAkBV,EAAE,CAACW,OAArB,iBACC;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,IAAI,EAAEhB,0BAA0B,CAACK,EAAE,CAACU,WAAH,CAAeE,IAAhB,EAAsBZ,EAAE,CAACW,OAAzB,CAAnD;AAAsF,UAAA,GAAG,EAAC,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAQGX,EAAE,CAACa,YARN;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAuBD,CAzCM;;GAAMd,K;;KAAAA,K","sourcesContent":["import { FC, useEffect, useState } from \"react\";\r\nimport { Alert, AlertColor, Snackbar, SnackbarCloseReason } from \"@mui/material\";\r\nimport { TransactionStatus, getExplorerTransactionLink } from \"@usedapp/core\";\r\n\r\nconst txStatusToToSeverity = (isMining: boolean, isSuccess: boolean): AlertColor => {\r\n  if (isMining) return \"info\";\r\n  else if (isSuccess) return \"success\";\r\n  else return \"error\";\r\n};\r\n\r\nexport const Toast: FC<{ tx: TransactionStatus }> = ({ tx }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const isNotNone = tx.status !== \"None\";\r\n  const isMining = tx.status === \"Mining\";\r\n  const isSuccess = tx.status === \"Success\";\r\n\r\n  useEffect(() => {\r\n    if (tx.status !== \"None\") {\r\n      setOpen(true);\r\n    }\r\n  }, [tx.status]);\r\n\r\n  const handleClose = (_: any, reason?: SnackbarCloseReason) => {\r\n    if (reason === \"clickaway\") return;\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isNotNone && (\r\n        <Snackbar\r\n          autoHideDuration={isMining ? null : 8000}\r\n          open={open}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert variant=\"filled\" onClose={handleClose} severity={txStatusToToSeverity(isMining, isSuccess)}>\r\n            {isMining && <div>Sending transaction...</div>}\r\n            {isSuccess && <div>Transaction confirmed...</div>}\r\n            {tx.transaction && tx.chainId && (\r\n              <a target=\"_blank\" href={getExplorerTransactionLink(tx.transaction.hash, tx.chainId)} rel=\"noreferrer\">\r\n                View Transaction in Explorer\r\n              </a>\r\n            )}\r\n            {tx.errorMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}