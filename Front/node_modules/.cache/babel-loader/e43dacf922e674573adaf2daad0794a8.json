{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain\\\\GoerliTry\\\\blockchain-developer-bootcamp-final-project\\\\frontend\\\\src\\\\components\\\\CheckTicket.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, TextField, Chip } from \"@mui/material\";\nimport { BoxItem } from \"./BoxItem\";\nimport { useGetTicketInfo } from \"../hooks/useContractHooks\";\nimport { Zone } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  marginRight: \"5px\"\n};\n\nconst parseTicketInfo = ticket => {\n  const expirationMs = ticket.expiration * 1000;\n  const noInfo = expirationMs === 0;\n  const hasTicketExpired = expirationMs < Date.now();\n  return {\n    color: noInfo ? \"info\" : hasTicketExpired ? \"error\" : \"success\",\n    label: noInfo ? \"No ticket bought for this plate number\" : hasTicketExpired ? \"Ticket has expired\" : `Ticked is valid until: ${new Date(expirationMs).toLocaleString()} in zone ${Zone[ticket.zone]}`\n  };\n};\n\nexport const CheckTicket = () => {\n  _s();\n\n  const [plate, setPlate] = useState(\"\");\n  const [searchPlate, setSearchPlate] = useState(\"\");\n  const ticketInfo = useGetTicketInfo(searchPlate);\n  return /*#__PURE__*/_jsxDEV(BoxItem, {\n    label: \"Check your parking ticket\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: style,\n          label: \"Car's plate\",\n          variant: \"outlined\",\n          value: plate,\n          onChange: e => {\n            setPlate(e.target.value);\n            setSearchPlate(\"\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            setSearchPlate(\"\");\n            setSearchPlate(plate);\n          },\n          children: \"Get Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), searchPlate && ticketInfo.expiration !== undefined && /*#__PURE__*/_jsxDEV(Chip, {\n        style: {\n          marginTop: \"5px\"\n        },\n        ...parseTicketInfo(ticketInfo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckTicket, \"ChSoUe6kCS6jcwrhpSjH2OMqWqA=\", false, function () {\n  return [useGetTicketInfo];\n});\n\n_c = CheckTicket;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckTicket\");","map":{"version":3,"sources":["D:/Blockchain/GoerliTry/blockchain-developer-bootcamp-final-project/frontend/src/components/CheckTicket.tsx"],"names":["useState","Button","TextField","Chip","BoxItem","useGetTicketInfo","Zone","style","marginRight","parseTicketInfo","ticket","expirationMs","expiration","noInfo","hasTicketExpired","Date","now","color","label","toLocaleString","zone","CheckTicket","plate","setPlate","searchPlate","setSearchPlate","ticketInfo","display","e","target","value","undefined","marginTop"],"mappings":";;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,eAAxC;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,MAAMC,KAAK,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAd;;AAEA,MAAMC,eAAe,GAAIC,MAAD,IAA4E;AAClG,QAAMC,YAAY,GAAGD,MAAM,CAACE,UAAP,GAAoB,IAAzC;AACA,QAAMC,MAAM,GAAGF,YAAY,KAAK,CAAhC;AACA,QAAMG,gBAAgB,GAAGH,YAAY,GAAGI,IAAI,CAACC,GAAL,EAAxC;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,MAAM,GAAG,MAAH,GAAYC,gBAAgB,GAAG,OAAH,GAAa,SADjD;AAELI,IAAAA,KAAK,EAAEL,MAAM,GACT,wCADS,GAETC,gBAAgB,GAChB,oBADgB,GAEf,0BAAyB,IAAIC,IAAJ,CAASJ,YAAT,EAAuBQ,cAAvB,EAAwC,YAAWb,IAAI,CAACI,MAAM,CAACU,IAAR,CAAc;AAN9F,GAAP;AAQD,CAbD;;AAeA,OAAO,MAAMC,WAAe,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM0B,UAAU,GAAGrB,gBAAgB,CAACmB,WAAD,CAAnC;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,2BAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAEpB,KADT;AAEE,UAAA,KAAK,EAAC,aAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAEe,KAJT;AAKE,UAAA,QAAQ,EAAGM,CAAD,IAAO;AACfL,YAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAL,YAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,cAAc,CAAC,EAAD,CAAd;AACAA,YAAAA,cAAc,CAACH,KAAD,CAAd;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAsBGE,WAAW,IAAIE,UAAU,CAACd,UAAX,KAA0BmB,SAAzC,iBACC,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA,WAAuCvB,eAAe,CAACiB,UAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAnCM;;GAAML,W;UAGQhB,gB;;;KAHRgB,W","sourcesContent":["import { FC, useState } from \"react\";\r\nimport { Button, TextField, Chip } from \"@mui/material\";\r\n\r\nimport { BoxItem } from \"./BoxItem\";\r\nimport { useGetTicketInfo } from \"../hooks/useContractHooks\";\r\nimport { Zone } from \"../constants\";\r\n\r\nconst style = { marginRight: \"5px\" };\r\n\r\nconst parseTicketInfo = (ticket: { expiration: number; zone: Zone }): { color: any; label: any } => {\r\n  const expirationMs = ticket.expiration * 1000;\r\n  const noInfo = expirationMs === 0;\r\n  const hasTicketExpired = expirationMs < Date.now();\r\n\r\n  return {\r\n    color: noInfo ? \"info\" : hasTicketExpired ? \"error\" : \"success\",\r\n    label: noInfo\r\n      ? \"No ticket bought for this plate number\"\r\n      : hasTicketExpired\r\n      ? \"Ticket has expired\"\r\n      : `Ticked is valid until: ${new Date(expirationMs).toLocaleString()} in zone ${Zone[ticket.zone]}`,\r\n  };\r\n};\r\n\r\nexport const CheckTicket: FC = () => {\r\n  const [plate, setPlate] = useState<string>(\"\");\r\n  const [searchPlate, setSearchPlate] = useState<string>(\"\");\r\n  const ticketInfo = useGetTicketInfo(searchPlate);\r\n\r\n  return (\r\n    <BoxItem label=\"Check your parking ticket\">\r\n      <div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <TextField\r\n            style={style}\r\n            label=\"Car's plate\"\r\n            variant=\"outlined\"\r\n            value={plate}\r\n            onChange={(e) => {\r\n              setPlate(e.target.value);\r\n              setSearchPlate(\"\");\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setSearchPlate(\"\");\r\n              setSearchPlate(plate);\r\n            }}\r\n          >\r\n            Get Info\r\n          </Button>\r\n        </div>\r\n        {searchPlate && ticketInfo.expiration !== undefined && (\r\n          <Chip style={{ marginTop: \"5px\" }} {...parseTicketInfo(ticketInfo)} />\r\n        )}\r\n      </div>\r\n    </BoxItem>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}